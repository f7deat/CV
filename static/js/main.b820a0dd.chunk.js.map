{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","href","tabIndex","aria-disabled","src","alt","width","height","type","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oMAsEeA,MAjEf,WACE,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,qCACb,uBAAGA,UAAU,uBAAuBC,KAAK,OAAM,kBAAC,IAAD,CAAeD,UAAU,aACxE,uBAAGA,UAAU,gBAAgBC,KAAK,OAAM,kBAAC,IAAD,CAAsBD,UAAU,aACxE,uBAAGA,UAAU,gBAAgBC,KAAK,OAAlC,QACA,uBAAGD,UAAU,yBAAyBC,KAAK,MAAMC,UAAW,EAAGC,gBAAc,QAA7E,cAGJ,yBAAKH,UAAU,yBACb,yBAAKA,UAAU,wCACb,yBAAKI,IAAI,+BAA+BC,IAAI,SAASL,UAAU,yCAAyCM,MAAM,MAAMC,OAAO,SAE7H,yBAAKP,UAAU,wCACb,uBAAGC,KAAK,4BAA4BD,UAAU,QAAO,kBAAC,IAAD,CAAcA,UAAU,aAC7E,uBAAGC,KAAK,gCAAgCD,UAAU,QAChD,kBAAC,IAAD,CAAgBA,UAAU,aAE5B,uBAAGC,KAAK,8BAA6B,kBAAC,IAAD,CAAqBD,UAAU,4BAEtE,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,uBAAd,4BACA,yBAAKA,UAAU,cAAf,wBAIF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBAAf,SAGA,yBAAKA,UAAU,oBACb,uBAAGC,KAAK,2BAAR,qBAEF,yBAAKD,UAAU,mBAAf,SAGA,yBAAKA,UAAU,oBACb,uBAAGC,KAAK,qBAAR,wBAIN,yBAAKD,UAAU,YACb,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,OAAM,kBAAC,IAAD,CAAYA,UAAU,cAE7C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACf,kBAAC,IAAD,CAAcA,UAAU,qBACxB,2BAAOQ,KAAK,OAAOR,UAAU,6CAA6CS,YAAY,8BAGxF,yBAAKT,UAAU,oCACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAYA,UAAU,kBCjDlBU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.b820a0dd.chunk.js","sourcesContent":["import React from 'react';\nimport './css/app.scss';\nimport { AiOutlineAppstoreAdd, AiFillGithub, AiFillLinkedin, AiFillTwitterCircle } from \"react-icons/ai\";\nimport {RiHomeLine, RiMoreLine, RiReactjsLine, RiSearchLine} from \"react-icons/ri\";\n\nfunction App() {\n  return (\n    <div className=\"row h-100\">\n      <div className=\"col-md-1 h-100 bg-light\">\n        <nav className=\"nav flex-column h-100 text-center\">\n          <a className=\"nav-link py-4 active\" href=\"#/a\"><RiReactjsLine className=\"icon-2x\" /></a>\n          <a className=\"nav-link py-4\" href=\"#/a\"><AiOutlineAppstoreAdd className=\"icon-2x\" /></a>\n          <a className=\"nav-link py-4\" href=\"#/a\">Link</a>\n          <a className=\"nav-link py-4 disabled\" href=\"#/a\" tabIndex={-1} aria-disabled=\"true\">Disabled</a>\n        </nav>\n      </div>\n      <div className=\"col-md-2 border-right\">\n        <div className=\"p-4 text-center justify-items-center\">\n          <img src=\"https://i.gifer.com/FSrf.gif\" alt=\"avatar\" className=\"object-fit-cover rounded-circle shadow\" width=\"165\" height=\"160\"/>\n        </div>\n        <div className=\"p-2 text-center justify-items-center\">\n          <a href=\"https://github.com/f7deat\" className=\"mr-2\"><AiFillGithub className=\"icon-2x\" /></a>\n          <a href=\"https://linkedin.com/u/f7deat\" className=\"mr-2\">\n            <AiFillLinkedin className=\"icon-2x\" />\n          </a>\n          <a href=\"https://twitter.com/f7deat\"><AiFillTwitterCircle className=\"icon-2x twitter-color\" /></a>\n        </div>\n        <div className=\"p-2 text-center\">\n          <h1 className=\"h4 font-weight-bold\">Đinh Công Tân</h1>\n          <div className=\"text-muted\">\n            Hai Phong, Viet Nam\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <div className=\"text-muted mt-2\">\n            Email\n          </div>\n          <div className=\"font-weight-bold\">\n            <a href=\"mailto:f7deat@gmail.com\">f7deat@gmail.com</a>\n          </div>\n          <div className=\"text-muted mt-3\">\n            Phone\n          </div>\n          <div className=\"font-weight-bold\">\n            <a href=\"telto:84762559696\">(+84) 762.559.696</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-9\">\n        <div className=\"row border-bottom\">\n            <div className=\"col-md-1 border-right text-center\">\n              <div className=\"p-3\"><RiHomeLine className=\"icon-1r\"/></div>\n            </div>\n            <div className=\"col-md-10\">\n              <div className=\"d-flex h-100\">\n              <RiSearchLine className=\"h-100 text-muted\"/>\n              <input type=\"text\" className=\"border-0 form-control h-100 nav-search-box\" placeholder=\"search for any thing...\"/>\n              </div>\n            </div>\n            <div className=\"col-md-1 border-left text-center\">\n              <div className=\"p-3\">\n                <RiMoreLine className=\"icon-1r\"/>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './css/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}